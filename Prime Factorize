#include<bits/stdc++.h>
#include <iostream>

using namespace std;
using ll=long long;
#define Max 40000
vector <int>primes;
int List[128];
int listsize;
 void seive(){
    bool isPrime[Max];
    memset(isPrime,true,sizeof(isPrime));
    for(int i=3;i*i<=Max;i+=2){
        if(isPrime[i]==true){
            for(int j=i*i;j<Max;j+=i){
                isPrime[j]=false;
            }
        }
    }
    primes.push_back(2);
    for(int i=3;i<Max;i+=2){
        if(isPrime[i]){
            primes.push_back(i);
        }
    }
 }

void primeFactor(int n){
    listsize=0;
    int sqrtN=int (sqrt(n)+1);
    for(int i=0;primes[i]<=sqrtN;i++){
        if(n%primes[i]==0){
           while(n%primes[i]==0){
             n/=primes[i];
             List[listsize]=primes[i];
             listsize++;
           }
        }
    }
    if(n>1){
        List[listsize]=n;
        listsize++;
    }
}
int main()
{
    seive();
    int n;
    cin>>n;
    primeFactor(n);
    for(int i=0;i<listsize;i++){
        cout<<List[i]<<" ";
    }
    return 0;
}
