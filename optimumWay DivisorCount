#include <bits/stdc++.h>
#include <iostream>
#define MAX 32000

using namespace std;

using ll = long long;

vector<int> primes;

void sieve(ll n) {
    bool isPrime[MAX];
    memset(isPrime,true,sizeof(isPrime));
    for (int i = 3; i * i <= MAX; i += 2) {
        if (isPrime[i]) {
            for (int j = i * i; j <= MAX; j += i) {
                isPrime[j] = false;
            }
        }
    }
    primes.push_back(2);
    for (int i = 3; i < MAX; i += 2) {
        if (isPrime[i]) primes.push_back(i);
    }
}

int countDivisor2(int n) {
    if (n < 1) return 0;
    sieve(n+1);
    int divisor = 1;
    for (int i = 0; primes[i]*primes[i] <= n; i++) {
        if (n % primes[i] == 0) {
            int cnt = 1;
            while (n % primes[i] == 0) {
                n /= primes[i];
                cnt++;
            }
            divisor *= cnt;
        }
    }
    if (n > 1) divisor *= 2;
    return divisor;
}

int main()
{
    int n;
    cin>>n;
    int div=countDivisor2(n);
    cout<<div;
    return 0;
}
